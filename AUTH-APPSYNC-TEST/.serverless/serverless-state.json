{
  "service": {
    "service": "auth-test-backend",
    "serviceObject": {
      "name": "auth-test-backend"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs14.x",
      "lambdaHashingVersion": "20201221",
      "profile": "andres",
      "region": "us-east-1",
      "stage": "develop",
      "versionFunctions": false,
      "environment": {
        "STAGE": "develop"
      },
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "CreateUserLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/auth-test-backend-develop-createUser"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "auth-test-backend",
                        "develop",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/auth-test-backend-develop*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/auth-test-backend-develop*:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "auth-test-backend",
                    "develop",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "CreateUserLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/auth-test-backend/develop/1624587592931-2021-06-25T02:19:52.931Z/auth-test-backend.zip"
              },
              "Handler": "functions/create-user.handler",
              "Runtime": "nodejs14.x",
              "FunctionName": "auth-test-backend-develop-createUser",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "STAGE": "develop",
                  "USERS_TABLE": {
                    "Ref": "UsersTable"
                  },
                  "USER_POOL_ID": {
                    "Ref": "CognitoUserPool"
                  }
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "CreateUserIamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "CreateUserIamRoleLambdaExecution",
              "CreateUserLogGroup"
            ]
          },
          "CreateUserIamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "auth-test-backend",
                        "develop",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/auth-test-backend-develop-createUser:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:PutItem"
                        ],
                        "Resource": {
                          "Fn::GetAtt": [
                            "UsersTable",
                            "Arn"
                          ]
                        }
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "cognito-idp:AdminCreateUser"
                        ],
                        "Resource": {
                          "Fn::GetAtt": [
                            "CognitoUserPool",
                            "Arn"
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "auth-test-backend",
                    "develop",
                    "createUser",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              },
              "ManagedPolicyArns": []
            }
          },
          "UsersTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "BillingMode": "PAY_PER_REQUEST",
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "Tags": [
                {
                  "Key": "Environment",
                  "Value": "develop"
                },
                {
                  "Key": "Name",
                  "Value": "users-table"
                }
              ]
            }
          },
          "CognitoUserPool": {
            "Type": "AWS::Cognito::UserPool",
            "UpdateReplacePolicy": "Retain",
            "Properties": {
              "AutoVerifiedAttributes": [
                "email"
              ],
              "Policies": {
                "PasswordPolicy": {
                  "MinimumLength": 8,
                  "RequireLowercase": false,
                  "RequireNumbers": false,
                  "RequireUppercase": false,
                  "RequireSymbols": false
                }
              },
              "UsernameAttributes": [
                "email"
              ],
              "Schema": [
                {
                  "AttributeDataType": "String",
                  "Name": "email",
                  "Required": false,
                  "Mutable": true
                }
              ],
              "AdminCreateUserConfig": {
                "AllowAdminCreateUserOnly": true,
                "InviteMessageTemplate": {
                  "EmailSubject": "Hey! Tú cuenta ha llegado!",
                  "EmailMessage": "Tú usuario es {username} y contraseña {####}"
                },
                "UnusedAccountValidityDays": 7
              }
            }
          },
          "AdminUserPoolGroup": {
            "Type": "AWS::Cognito::UserPoolGroup",
            "Properties": {
              "GroupName": "Admin",
              "Precedence": 1,
              "UserPoolId": {
                "Ref": "CognitoUserPool"
              }
            }
          },
          "WebUserPoolClient": {
            "Type": "AWS::Cognito::UserPoolClient",
            "Properties": {
              "UserPoolId": {
                "Ref": "CognitoUserPool"
              },
              "ClientName": "auth_backend_web",
              "RefreshTokenValidity": 30,
              "ExplicitAuthFlows": [
                "ALLOW_USER_SRP_AUTH",
                "ALLOW_USER_PASSWORD_AUTH",
                "ALLOW_REFRESH_TOKEN_AUTH"
              ],
              "PreventUserExistenceErrors": "ENABLED"
            }
          },
          "ServerPoolClient": {
            "Type": "AWS::Cognito::UserPoolClient",
            "Properties": {
              "UserPoolId": {
                "Ref": "CognitoUserPool"
              },
              "ClientName": "auth_backend_server",
              "RefreshTokenValidity": 30,
              "GenerateSecret": true,
              "PreventUserExistenceErrors": "ENABLED"
            }
          },
          "AuthtestbackendGraphQlApi": {
            "Type": "AWS::AppSync::GraphQLApi",
            "Properties": {
              "Name": "authtestbackend",
              "AuthenticationType": "AMAZON_COGNITO_USER_POOLS",
              "AdditionalAuthenticationProviders": [],
              "UserPoolConfig": {
                "AwsRegion": "us-east-1",
                "UserPoolId": {
                  "Ref": "CognitoUserPool"
                },
                "DefaultAction": "ALLOW"
              },
              "XrayEnabled": false
            }
          },
          "AuthtestbackendGraphQlSchema": {
            "Type": "AWS::AppSync::GraphQLSchema",
            "Properties": {
              "Definition": "type Query {\n  getUser(id: ID!): User!\n}\n\ntype Mutation {\n  createUser(input: UserInput): Boolean @aws_auth(cognito_groups: [\"Admin\"])\n}\n\ntype User {\n  id: ID!\n  name: String!\n  email: AWSEmail!\n  permissions: [String!]!\n}\n\ninput UserInput {\n  name: String!\n  email: AWSEmail!\n  permissions: [String!]!\n}\n\nschema {\n  query: Query\n  mutation: Mutation\n}\n",
              "ApiId": {
                "Fn::GetAtt": [
                  "AuthtestbackendGraphQlApi",
                  "ApiId"
                ]
              }
            }
          },
          "AuthtestbackendGraphQlDsusersTableRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "appsync.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": "GraphQlDsusersTablePolicy",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Action": [
                          "dynamodb:DeleteItem",
                          "dynamodb:GetItem",
                          "dynamodb:PutItem",
                          "dynamodb:Query",
                          "dynamodb:Scan",
                          "dynamodb:UpdateItem",
                          "dynamodb:BatchGetItem",
                          "dynamodb:BatchWriteItem",
                          "dynamodb:ConditionCheckItem"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                          {
                            "Fn::Join": [
                              ":",
                              [
                                "arn",
                                "aws",
                                "dynamodb",
                                "us-east-1",
                                {
                                  "Ref": "AWS::AccountId"
                                },
                                {
                                  "Fn::Join": [
                                    "/",
                                    [
                                      "table",
                                      {
                                        "Ref": "UsersTable"
                                      }
                                    ]
                                  ]
                                }
                              ]
                            ]
                          },
                          {
                            "Fn::Join": [
                              "/",
                              [
                                {
                                  "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AuthtestbackendGraphQlDsusersTableRole\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][0][\"Resource\"][0]"
                                },
                                "*"
                              ]
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          "AuthtestbackendGraphQlDscreateUserFunctionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "appsync.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": "GraphQlDscreateUserFunctionPolicy",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Action": [
                          "lambda:invokeFunction"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                          {
                            "Fn::GetAtt": [
                              "CreateUserLambdaFunction",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::Join": [
                              ":",
                              [
                                {
                                  "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AuthtestbackendGraphQlDscreateUserFunctionRole\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][0][\"Resource\"][0]"
                                },
                                "*"
                              ]
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          "AuthtestbackendGraphQlDsusersTable": {
            "Type": "AWS::AppSync::DataSource",
            "Properties": {
              "ApiId": {
                "Fn::GetAtt": [
                  "AuthtestbackendGraphQlApi",
                  "ApiId"
                ]
              },
              "Name": "usersTable",
              "Type": "AMAZON_DYNAMODB",
              "ServiceRoleArn": {
                "Fn::GetAtt": [
                  "AuthtestbackendGraphQlDsusersTableRole",
                  "Arn"
                ]
              },
              "DynamoDBConfig": {
                "AwsRegion": "us-east-1",
                "TableName": {
                  "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AuthtestbackendGraphQlDsusersTableRole\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][0][\"Resource\"][0][\"Fn::Join\"][1][5][\"Fn::Join\"][1][1]"
                },
                "UseCallerCredentials": false,
                "Versioned": false
              }
            }
          },
          "AuthtestbackendGraphQlDscreateUserFunction": {
            "Type": "AWS::AppSync::DataSource",
            "Properties": {
              "ApiId": {
                "Fn::GetAtt": [
                  "AuthtestbackendGraphQlApi",
                  "ApiId"
                ]
              },
              "Name": "createUserFunction",
              "Type": "AWS_LAMBDA",
              "ServiceRoleArn": {
                "Fn::GetAtt": [
                  "AuthtestbackendGraphQlDscreateUserFunctionRole",
                  "Arn"
                ]
              },
              "LambdaConfig": {
                "LambdaFunctionArn": {
                  "Fn::GetAtt": [
                    "CreateUserLambdaFunction",
                    "Arn"
                  ]
                }
              }
            }
          },
          "AuthtestbackendGraphQlResolverQuerygetUser": {
            "Type": "AWS::AppSync::Resolver",
            "DependsOn": "AuthtestbackendGraphQlSchema",
            "Properties": {
              "ApiId": {
                "Fn::GetAtt": [
                  "AuthtestbackendGraphQlApi",
                  "ApiId"
                ]
              },
              "TypeName": "Query",
              "FieldName": "getUser",
              "RequestMappingTemplate": "{\n  \"version\": \"2018-05-29\",\n  \"operation\": \"GetItem\",\n  \"key\": {\n    \"id\": $utils.dynamodb.toDynamoDBJson($context.arguments.id)\n  },\n  \"consistentRead\": true\n}\n",
              "ResponseMappingTemplate": "$utils.toJson($context.result)\n",
              "Kind": "UNIT",
              "DataSourceName": {
                "Fn::GetAtt": [
                  "AuthtestbackendGraphQlDsusersTable",
                  "Name"
                ]
              }
            }
          },
          "AuthtestbackendGraphQlResolverMutationcreateUser": {
            "Type": "AWS::AppSync::Resolver",
            "DependsOn": "AuthtestbackendGraphQlSchema",
            "Properties": {
              "ApiId": {
                "Fn::GetAtt": [
                  "AuthtestbackendGraphQlApi",
                  "ApiId"
                ]
              },
              "TypeName": "Mutation",
              "FieldName": "createUser",
              "Kind": "UNIT",
              "DataSourceName": {
                "Fn::GetAtt": [
                  "AuthtestbackendGraphQlDscreateUserFunction",
                  "Name"
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-auth-test-backend-develop-ServerlessDeploymentBucketName"
            }
          },
          "AwsStage": {
            "Value": "develop"
          },
          "AwsRegion": {
            "Value": "us-east-1"
          },
          "CognitoUserPoolId": {
            "Value": {
              "Ref": "CognitoUserPool"
            }
          },
          "WebCognitoUserPoolClientId": {
            "Value": {
              "Ref": "WebUserPoolClient"
            }
          },
          "ServerCognitoUserPoolClientId": {
            "Value": {
              "Ref": "ServerPoolClient"
            }
          },
          "AuthtestbackendGraphQlApiId": {
            "Value": {
              "Fn::GetAtt": [
                "AuthtestbackendGraphQlApi",
                "ApiId"
              ]
            },
            "Export": {
              "Name": {
                "Fn::Sub": "${AWS::StackName}-AuthtestbackendGraphQlApiId"
              }
            }
          },
          "AuthtestbackendGraphQlApiUrl": {
            "Value": {
              "Fn::GetAtt": [
                "AuthtestbackendGraphQlApi",
                "GraphQLUrl"
              ]
            },
            "Export": {
              "Name": {
                "Fn::Sub": "${AWS::StackName}-AuthtestbackendGraphQlApiUrl"
              }
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "stage": "develop",
      "region": "us-east-1",
      "appSync": [
        {
          "name": "authtestbackend",
          "schema": "schema.api.graphql",
          "authenticationType": "AMAZON_COGNITO_USER_POOLS",
          "userPoolConfig": {
            "awsRegion": "us-east-1",
            "defaultAction": "ALLOW",
            "userPoolId": {
              "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AuthtestbackendGraphQlApi\"][\"Properties\"][\"UserPoolConfig\"][\"UserPoolId\"]"
            }
          },
          "mappingTemplatesLocation": "mapping-templates",
          "mappingTemplates": [
            {
              "type": "Query",
              "field": "getUser",
              "dataSource": "usersTable"
            },
            {
              "type": "Mutation",
              "field": "createUser",
              "dataSource": "createUserFunction",
              "request": false,
              "response": false
            }
          ],
          "dataSources": [
            {
              "type": "AMAZON_DYNAMODB",
              "name": "usersTable",
              "config": {
                "tableName": {
                  "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AuthtestbackendGraphQlDsusersTableRole\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][0][\"Resource\"][0][\"Fn::Join\"][1][5][\"Fn::Join\"][1][1]"
                }
              }
            },
            {
              "type": "AWS_LAMBDA",
              "name": "createUserFunction",
              "config": {
                "functionName": "createUser"
              }
            }
          ]
        }
      ]
    },
    "plugins": [
      "serverless-appsync-plugin",
      "serverless-iam-roles-per-function"
    ],
    "pluginsData": {},
    "functions": {
      "createUser": {
        "handler": "functions/create-user.handler",
        "environment": {
          "USERS_TABLE": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"CreateUserLambdaFunction\"][\"Properties\"][\"Environment\"][\"Variables\"][\"USERS_TABLE\"]"
          },
          "USER_POOL_ID": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"CreateUserLambdaFunction\"][\"Properties\"][\"Environment\"][\"Variables\"][\"USER_POOL_ID\"]"
          }
        },
        "iamRoleStatements": [
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"CreateUserIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][1]"
          },
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"CreateUserIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][2]"
          }
        ],
        "events": [],
        "name": "auth-test-backend-develop-createUser",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs14.x",
        "vpc": {}
      }
    },
    "resources": {
      "Resources": {
        "UsersTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "BillingMode": "PAY_PER_REQUEST",
            "KeySchema": [
              {
                "AttributeName": "id",
                "KeyType": "HASH"
              }
            ],
            "AttributeDefinitions": [
              {
                "AttributeName": "id",
                "AttributeType": "S"
              }
            ],
            "Tags": [
              {
                "Key": "Environment",
                "Value": "develop"
              },
              {
                "Key": "Name",
                "Value": "users-table"
              }
            ]
          }
        },
        "CognitoUserPool": {
          "Type": "AWS::Cognito::UserPool",
          "UpdateReplacePolicy": "Retain",
          "Properties": {
            "AutoVerifiedAttributes": [
              "email"
            ],
            "Policies": {
              "PasswordPolicy": {
                "MinimumLength": 8,
                "RequireLowercase": false,
                "RequireNumbers": false,
                "RequireUppercase": false,
                "RequireSymbols": false
              }
            },
            "UsernameAttributes": [
              "email"
            ],
            "Schema": [
              {
                "AttributeDataType": "String",
                "Name": "email",
                "Required": false,
                "Mutable": true
              }
            ],
            "AdminCreateUserConfig": {
              "AllowAdminCreateUserOnly": true,
              "InviteMessageTemplate": {
                "EmailSubject": "Hey! Tú cuenta ha llegado!",
                "EmailMessage": "Tú usuario es {username} y contraseña {####}"
              },
              "UnusedAccountValidityDays": 7
            }
          }
        },
        "AdminUserPoolGroup": {
          "Type": "AWS::Cognito::UserPoolGroup",
          "Properties": {
            "GroupName": "Admin",
            "Precedence": 1,
            "UserPoolId": {
              "Ref": "CognitoUserPool"
            }
          }
        },
        "WebUserPoolClient": {
          "Type": "AWS::Cognito::UserPoolClient",
          "Properties": {
            "UserPoolId": {
              "Ref": "CognitoUserPool"
            },
            "ClientName": "auth_backend_web",
            "RefreshTokenValidity": 30,
            "ExplicitAuthFlows": [
              "ALLOW_USER_SRP_AUTH",
              "ALLOW_USER_PASSWORD_AUTH",
              "ALLOW_REFRESH_TOKEN_AUTH"
            ],
            "PreventUserExistenceErrors": "ENABLED"
          }
        },
        "ServerPoolClient": {
          "Type": "AWS::Cognito::UserPoolClient",
          "Properties": {
            "UserPoolId": {
              "Ref": "CognitoUserPool"
            },
            "ClientName": "auth_backend_server",
            "RefreshTokenValidity": 30,
            "GenerateSecret": true,
            "PreventUserExistenceErrors": "ENABLED"
          }
        }
      },
      "Outputs": {
        "AwsStage": {
          "Value": "develop"
        },
        "AwsRegion": {
          "Value": "us-east-1"
        },
        "CognitoUserPoolId": {
          "Value": {
            "Ref": "CognitoUserPool"
          }
        },
        "WebCognitoUserPoolClientId": {
          "Value": {
            "Ref": "WebUserPoolClient"
          }
        },
        "ServerCognitoUserPoolClientId": {
          "Value": {
            "Ref": "ServerPoolClient"
          }
        }
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": {
        "$ref": "$[\"service\"][\"serviceObject\"]"
      },
      "frameworkVersion": "2",
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "package": {
        "patterns": [
          "!package-lock.json",
          "!package.json"
        ],
        "artifact": "/home/andres/Work/AUTH-APPSYNC-TEST/.serverless/auth-test-backend.zip",
        "artifactDirectoryName": "serverless/auth-test-backend/develop/1624587592931-2021-06-25T02:19:52.931Z"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "/home/andres/Work/AUTH-APPSYNC-TEST/.serverless/auth-test-backend.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/auth-test-backend/develop/1624587592931-2021-06-25T02:19:52.931Z",
    "artifact": "auth-test-backend.zip"
  }
}