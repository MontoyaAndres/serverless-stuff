service: appsync-real-time-chat
frameworkVersion: '2'

plugins:
  - serverless-appsync-plugin

provider:
  name: aws
  runtime: nodejs12.x
  region: us-east-1
  profile: andres
  stage: dev
  environment:
    STAGE: ${self:custom.stage}

package:
  patterns:
    - '!node_modules/**'
    - '!package-lock.json'
    - '!package.json'

custom:
  region: ${opt:region, self:provider.region}
  stage: ${opt:stage, self:provider.stage}
  appSync:
    - ${file(serverless.appsync-api.yml)}

resources:
  Resources:
    MessageTable:
      Type: AWS::DynamoDB::Table
      Properties:
        BillingMode: PAY_PER_REQUEST
        KeySchema: 
          - AttributeName: id
            KeyType: HASH
          - AttributeName: roomId
            KeyType: RANGE
        AttributeDefinitions: 
          - AttributeName: id
            AttributeType: S
          - AttributeName: roomId
            AttributeType: S
          - AttributeName: createdAt
            AttributeType: S
        GlobalSecondaryIndexes:
          - IndexName: byRoomId
            KeySchema:
              - AttributeName: roomId
                KeyType: HASH
              - AttributeName: createdAt
                KeyType: RANGE
            Projection:
              ProjectionType: ALL

    RoomTable:
      Type: AWS::DynamoDB::Table
      Properties:
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S

    CognitoUserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        AutoVerifiedAttributes:
          - email
        Policies:
          PasswordPolicy:
            MinimumLength: 8
            RequireLowercase: false
            RequireNumbers: false
            RequireUppercase: false
            RequireSymbols: false
        UsernameAttributes:
          - email
        Schema:
          - AttributeDataType: String
            Name: email
            Required: true
            Mutable: true

    WebUserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        UserPoolId: !Ref CognitoUserPool
        ClientName: web
        ExplicitAuthFlows:
          - ALLOW_USER_SRP_AUTH
          - ALLOW_USER_PASSWORD_AUTH
          - ALLOW_REFRESH_TOKEN_AUTH
        PreventUserExistenceErrors: ENABLED

  Outputs:
    AwsRegion:
      Value: ${self:custom.region}

    CognitoUserPoolId:
      Value: !Ref CognitoUserPool

    WebCognitoUserPoolClientId:
      Value: !Ref WebUserPoolClient

    ApiUrl:
      Value: !GetAtt AppsyncrealtimechatGraphQlApi.GraphQLUrl
