service: appsync-github-node
frameworkVersion: '2'

plugins:
  - serverless-appsync-plugin

provider:
  name: aws
  runtime: nodejs12.x
  region: us-east-1
  profile: andres
  stage: dev
  environment:
    STAGE: ${self:custom.stage}

package:
  patterns:
    - '!node_modules/**'
    - '!package-lock.json'
    - '!package.json'

custom:
  region: ${opt:region, self:provider.region}
  stage: ${opt:stage, self:provider.stage}
  appSync:
    - ${file(serverless.appsync-api.yml)}

resources:
  Resources:
    GitHubTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions: 
          - AttributeName: "PK"
            AttributeType: "S"
          - AttributeName: "SK"
            AttributeType: "S"
          - AttributeName: "GSI1PK"
            AttributeType: "S"
          - AttributeName: "GSI1SK"
            AttributeType: "S"
          - AttributeName: "GSI2PK"
            AttributeType: "S"
          - AttributeName: "GSI2SK"
            AttributeType: "S"
          - AttributeName: "GSI3PK"
            AttributeType: "S"
          - AttributeName: "GSI3SK"
            AttributeType: "S"
        KeySchema: 
          - AttributeName: "PK"
            KeyType: "HASH"
          - AttributeName: "SK"
            KeyType: "RANGE"
        BillingMode: "PAY_PER_REQUEST"
        GlobalSecondaryIndexes:
          - IndexName: 'GSI1'
            KeySchema:
            - AttributeName: "GSI1PK"
              KeyType: "HASH"
            - AttributeName: "GSI1SK"
              KeyType: "RANGE"
            Projection:
              ProjectionType: ALL
          - IndexName: 'GSI2'
            KeySchema:
            - AttributeName: "GSI2PK"
              KeyType: "HASH"
            - AttributeName: "GSI2SK"
              KeyType: "RANGE"
            Projection:
              ProjectionType: ALL
          - IndexName: 'GSI3'
            KeySchema:
            - AttributeName: "GSI3PK"
              KeyType: "HASH"
            - AttributeName: "GSI3SK"
              KeyType: "RANGE"
            Projection:
              ProjectionType: ALL

  Outputs:
    AwsRegion:
      Value: ${self:custom.region}

    ApiUrl:
      Value: !GetAtt AppsyncgithubnodeGraphQlApi.GraphQLUrl
